#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# | Copyright Thorsten Bruhns   thorsten.bruhns@opitz-consulting.com |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# The Check generates a WARNING, when
# - Database is not in Force Logging
# - Database is not in Archivelogmode
#

#<<<oracle_processes>>>
# ORACLE_SID processes_pct processes_count processes_max
# tux12c 12.1.0.1.0 OPEN ALLOWED 09.03.2014 03:23:25
factory_settings["oracle_instance"] = {
    "force_logging"         : True,
}

def inventory_oracle_instance(info):
    return [ (line[0], "oracle_instance") for line in info if len(line) >= 1 ]

def check_oracle_instance(item, params, info):
    perfdata = []
    nagiosstate = 3
    nagiosstatestr = 'UNKNOWN'
    for line in info:
        if line[0] == item:
            # not item in result from agent found!
            infotext = "CRITICAL - Instance not running or other error"
            if line[1] == 'FAILURE':
                nagiosstate = 2
                nagiosstatestr = 'CRITICAL '
                infotext = ""
                for line2 in line[2:]:
                    infotext += line2 + " "
                return (nagiosstate, nagiosstatestr + infotext, perfdata)
            else:
                nagiosstate = 0
                nagiosstatestr = 'OK'
                oradbversion = line[1]
                oradbopenmode = line[2]
                oradblogins = line[3]
                oradbstartup = line[5]
                oradbarchivelog = line[7]
                oradbrole = line[8]
                oradblogging = line[9]
                oradbuptime = line[10]
                oradbname = line[11]

                print oradbrole + oradbopenmode

                if oradbrole == 'PRIMARY' and oradbopenmode <> 'OPEN':
                    nagiosstate = 2
                    nagiosstatestr = 'CRITICAL'
                    oradbopenmode = oradbopenmode + '(!!)'
                    oradbrole = oradbrole + '(!!)'

                infotext = " - Database Name %s Status %s Logins %s Version %s Startup %s Role %s " \
                           "%s Force-Logging %s" \
                    % (oradbname, oradbopenmode, oradblogins, oradbversion, oradbstartup, oradbrole, \
                       oradbarchivelog, oradblogging)

                perfdata =  [('uptime', oradbuptime)]
                return (nagiosstate, nagiosstatestr + infotext, perfdata)
    infotext = 'Instance not running!'
    return (2, ("%s" % infotext))

check_info['oracle_instance'] = {
    "check_function"          : check_oracle_instance,
    "inventory_function"      : inventory_oracle_instance,
    "service_description"     : "ORA %s Instance",
    "has_perfdata"            : True,
    "group"                   : "oracle_instance",
    "default_levels_variable" : "oracle_instance",
    #"includes"                : [ "df.include" ],
}
