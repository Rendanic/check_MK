#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# | Copyright Thorsten Bruhns   thorsten.bruhns@opitz-consulting.com |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#

#<<<oracle_processes>>>
# ORACLE_SID processes_pct processes_count processes_max
# tux12c 12.1.0.1.0 OPEN ALLOWED 09.03.2014 03:23:25

import time

factory_settings["oracle_rman_defaults"] = {
    "age_min"         : (90.0, 70.0),
}

def inventory_oracle_rman(info):

    inventory = []
    for line in info:
        if len(line) <=5:
            continue

        ORACLE_SID= line[0]
        rman_status = line[1]
        rman_start = line[2]
        rman_end = line[3]
        rman_backuptyp = line[4]

        # only accept full, incremental and archivelog-Backups
        if rman_backuptyp not in('ARCHIVELOG', 'DB_FULL', 'DB_INCR'):
            continue
        #print oracle_sid + rman_backuptyp + rman_start + rman_end
        parameters = {}
        #parameters = { "autoextend" : False }

        inventory.append((("%s.%s" % (ORACLE_SID,  rman_backuptyp)), "oracle_rman_defaults"))
        #inventory.append((("%s.%s" % (ORACLE_SID,  rman_backuptyp)), "oracle_rman_defaults"))

    return inventory

def check_oracle_rman(item, params, info):
    try:
        ORACLE_SID, rman_backuptyp_srv = item.split('.')
    except ValueError:
        return (3, 'UNKNOWN - Invalid check item given (must be <SID>.<backuptype>)')

    perfdata = []
    nagiosstate = 3
    infotext = ""

    warn, crit = params.get("age_min")

    for line in info:

        if len(line) <=5:
            continue
        if line[0] == ORACLE_SID:
            rman_status = line[1]
            rman_start = line[2]
            rman_end = line[3]
            rman_backuptyp = line[4]
            rman_backupage = int(line[5])

            # check for backuptyp
            if rman_backuptyp == rman_backuptyp_srv:
                if rman_backupage >= crit:
                    infotext = ('Backup to old (!!). age %s minutes' % rman_backupage)
                    nagiosstate = 2
                elif rman_backupage >= warn:
                    infotext = ('Backup to old(!). age %s minutes' % rman_backupage)
                    nagiosstate = 1
                else:
                    nagiosstate = 0

                rman_starttime = time.strptime(rman_start, '%Y-%m-%d_%H:%M:%S')
                infotext = infotext + (' last backup %s' % time.strftime('%d.%m.%Y %H:%M:%S', rman_starttime))
                infotext = infotext + (' (levels at %i/%i minutes)' % (warn, crit))

                perfdata = [ ("age", rman_backupage, ) ]

                return (nagiosstate, infotext, perfdata)

    return (2, ("%s" % infotext))

check_info['oracle_rman_backups'] = {
    "check_function"          : check_oracle_rman,
    "inventory_function"      : inventory_oracle_rman,
    "service_description"     : "ORA %s RMAN-Backup",
    "has_perfdata"            : True,
    "group"                   : "oracle_rman",
    "default_levels_variable" : "oracle_rman_defaults",
    #"includes"                : [ "df.include" ],
}
